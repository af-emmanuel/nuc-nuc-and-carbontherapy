#----------------------------------------------------------------------------
# Setup the project
cmake_minimum_required(VERSION 2.6 FATAL_ERROR)
project(CallingScheme)

list(APPEND CMAKE_PREFIX_PATH $ENV{ROOTSYS}/cmake)

message ("CMAKE_PREFIX_PATH = " ${CMAKE_PREFIX_PATH})
#----------------------------------------------------------------------------
# Find Geant4 package, activating all available UI and Vis drivers by default
# You can set WITH_GEANT4_UIVIS to OFF via the command line or ccmake/cmake-gui
# to build a batch mode only executable
#
option(WITH_GEANT4_UIVIS "Build example with Geant4 UI and Vis drivers" ON)
if(WITH_GEANT4_UIVIS)
  find_package(Geant4 REQUIRED ui_all vis_all)
else()
  find_package(Geant4 REQUIRED)
endif()

message ("Geant4_LIBRARIES  = " ${Geant4_LIBRARIES})
#----------------------------------------------------------------------------
# Setup ROOT include directories and compile definitions
#inclusion des definitions pour ROOT
find_package (ROOT REQUIRED)
message ("ROOTVERSION       = " ${ROOT_VERSION})
#message ("ROOT_USE_FILE     = " ${ROOT_USE_FILE})
#message ("ROOT_INCLUDE_DIRS = " ${ROOT_INCLUDE_DIRS})
#message ("ROOT_LIBRARIES    = " ${ROOT_LIBRARIES})

#----------------------------------------------------------------------------
# Setup Geant4 include directories and compile definitions
# Setup include directory for this project
#
include(${Geant4_USE_FILE})
#include(${ROOT_USE_FILE})
include("../G4LPC/ROOTUseFile.cmake")
include_directories(${PROJECT_SOURCE_DIR}/include)

set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${ROOT_CXX_FLAGS} -DG4VIS_USE")
message ("CMAKE_CXX_FLAGS   = " ${CMAKE_CXX_FLAGS})

#----------------------------------------------------------------------------
# Locate sources and headers for this project
# NB: headers are included so they will show up in IDEs
#
file(GLOB sources ${PROJECT_SOURCE_DIR}/src/*.cc)
file(GLOB headers ${PROJECT_SOURCE_DIR}/include/*.hh)

#----------------------------------------------------------------------------
# Add the executable, and link it to the Geant4 libraries
#
add_executable(CallingScheme CallingScheme.cc ${sources} ${headers})
target_link_libraries(CallingScheme ${Geant4_LIBRARIES} ${ROOT_LIBRARIES})


#----------------------------------------------------------------------------
# For internal Geant4 use - but has no effect if you build this
# example standalone
#
#add_custom_target(hadrontherapy DEPENDS hadrontherapy)

#----------------------------------------------------------------------------
# Install the executable to 'bin' directory under CMAKE_INSTALL_PREFIX
#
install(TARGETS CallingScheme DESTINATION bin)
